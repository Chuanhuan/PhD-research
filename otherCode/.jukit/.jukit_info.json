{"cmd": "with torch.no_grad():\n    # Generate samples from the latent space\n    num_samples = 10\n    # Create random one-hot vectors for the latent variable\n    z = torch.randn(num_samples, latent_dim, num_classes)\n    z_indices = torch.argmax(z, dim = 2)\n    z_one_hot = torch.zeros_like(z).scatter_(2, z_indices.unsqueeze(2), 1)\n\n    z = z_one_hot.view(num_samples, -1) # Flatten for decoding\n\n    samples = model.decode(z).view(num_samples, 1, 28, 28).cpu() # Reshape for plotting\n\n    # Plot the generated samples\n    fig, axes = plt.subplots(1, num_samples, figsize=(10, 2))\n    for i, ax in enumerate(axes):\n        ax.imshow(samples[i, 0], cmap='gray')\n        ax.axis('off')\n    plt.show()", "cmd_opts": "", "import_complete": 0, "terminal": "tmux"}