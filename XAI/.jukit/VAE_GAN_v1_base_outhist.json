{"0KiVc3DKq9": [], "vdkIA87H1I": [], "4cYhBtzvcP": [{"output_type": "stream", "name": "stdout", "text": "Test Accuracy: 98.99%\n"}], "k5YWyyqgo7": [], "GLMDo7DbS2": [], "bKaOFAsJO1": [], "83f6l2Dw3G": [], "tQqyQelokQ": [{"output_type": "stream", "name": "stdout", "text": "Epoch 1/10, Loss VAE: 28.9333, Loss Critic: 2.7840, Acc: 0.1235\nEpoch 2/10, Loss VAE: 0.1965, Loss Critic: -0.0000, Acc: 0.1252\nEpoch 3/10, Loss VAE: 0.1275, Loss Critic: 0.2376, Acc: 0.1288\nEpoch 4/10, Loss VAE: 0.1644, Loss Critic: 1.6924, Acc: 0.1402\nEpoch 5/10, Loss VAE: 0.1359, Loss Critic: 3.0347, Acc: 0.1381\nEpoch 6/10, Loss VAE: 0.1208, Loss Critic: 3.0262, Acc: 0.1303\nEpoch 7/10, Loss VAE: 0.1263, Loss Critic: 3.0222, Acc: 0.0930\nEpoch 8/10, Loss VAE: 0.1407, Loss Critic: 3.0209, Acc: 0.0719\nEpoch 9/10, Loss VAE: 0.0998, Loss Critic: 3.0199, Acc: 0.0586\nEpoch 10/10, Loss VAE: 0.1097, Loss Critic: 3.0193, Acc: 0.0364\n"}], "Pv1qVZYTpt": [{"output_type": "stream", "name": "stdout", "text": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)\nCell \u001b[0;32mIn[9], line 96\u001b[0m\n\u001b[1;32m     94\u001b[0m c_vae\u001b[38;5;241m.\u001b[39meval()\n\u001b[1;32m     95\u001b[0m critic\u001b[38;5;241m.\u001b[39meval()\n\u001b[0;32m---> 96\u001b[0m visualize_results(train_loader, model, c_vae, critic, Config\u001b[38;5;241m.\u001b[39mdevice)\n\u001b[1;32m     97\u001b[0m visualize_comparison_results(train_loader, model, c_vae, critic, Config\u001b[38;5;241m.\u001b[39mdevice)\n\nCell \u001b[0;32mIn[9], line 15\u001b[0m, in \u001b[0;36mvisualize_results\u001b[0;34m(test_loader, model, c_vae, critic, device)\u001b[0m\n\u001b[1;32m     13\u001b[0m x \u001b[38;5;241m=\u001b[39m model(data)\n\u001b[1;32m     14\u001b[0m output \u001b[38;5;241m=\u001b[39m c_vae(x)\n\u001b[0;32m---> 15\u001b[0m c \u001b[38;5;241m=\u001b[39m critic(x)\n\u001b[1;32m     17\u001b[0m \u001b[38;5;66;03m# Convert to numpy arrays\u001b[39;00m\n\u001b[1;32m     18\u001b[0m \u001b[38;5;66;03m# Using \"recon\" or \"z_mean\" as your reconstructed image depends on your architecture.\u001b[39;00m\n\u001b[1;32m     19\u001b[0m \u001b[38;5;66;03m# Here we follow your original code:\u001b[39;00m\n\u001b[1;32m     20\u001b[0m recon_imgs \u001b[38;5;241m=\u001b[39m output[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mz_mean\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m.\u001b[39mcpu()\u001b[38;5;241m.\u001b[39mnumpy()\n\nFile \u001b[0;32m~/anaconda3/lib/python3.12/site-packages/torch/nn/modules/module.py:1736\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1734\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1735\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1736\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\nFile \u001b[0;32m~/anaconda3/lib/python3.12/site-packages/torch/nn/modules/module.py:1747\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1742\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1743\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1744\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1745\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1746\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1747\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m forward_call(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m   1749\u001b[0m result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1750\u001b[0m called_always_called_hooks \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mset\u001b[39m()\n\nCell \u001b[0;32mIn[6], line 15\u001b[0m, in \u001b[0;36mCritic.forward\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mforward\u001b[39m(\u001b[38;5;28mself\u001b[39m, x):\n\u001b[0;32m---> 15\u001b[0m     x \u001b[38;5;241m=\u001b[39m x\u001b[38;5;241m.\u001b[39mview(\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m784\u001b[39m)\n\u001b[1;32m     16\u001b[0m     x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmain(x)\n\u001b[1;32m     17\u001b[0m     x \u001b[38;5;241m=\u001b[39m x\u001b[38;5;241m.\u001b[39mview(\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m28\u001b[39m, \u001b[38;5;241m28\u001b[39m)\n\n\u001b[0;31mRuntimeError\u001b[0m: shape '[-1, 784]' is invalid for input of size 640\n"}]}